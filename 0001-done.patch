From ea60188d6d29c6acad4e48a6e960f9e4aa19634c Mon Sep 17 00:00:00 2001
From: Learner015 <shahanjali0604@gmail.com>
Date: Thu, 26 Sep 2024 21:03:56 +0530
Subject: [PATCH] done

---
 package-lock.json      |  2 +-
 package.json           |  2 +-
 src/DataManipulator.ts | 31 +++++++++++++++++++++----------
 src/Graph.tsx          | 24 ++++++++++++------------
 4 files changed, 35 insertions(+), 24 deletions(-)

diff --git a/package-lock.json b/package-lock.json
index 8135a72..08c6442 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -18,7 +18,7 @@
         "@types/react-dom": "^16.0.11",
         "bootstrap": "^4.2.1",
         "puppeteer": "^1.19.0",
-        "react": "^16.9.0",
+        "react": "^16.14.0",
         "react-dom": "^16.9.0",
         "react-scripts": "2.1.3"
       },
diff --git a/package.json b/package.json
index 8ca3a60..c11f759 100644
--- a/package.json
+++ b/package.json
@@ -13,7 +13,7 @@
     "@types/react-dom": "^16.0.11",
     "bootstrap": "^4.2.1",
     "puppeteer": "^1.19.0",
-    "react": "^16.9.0",
+    "react": "^16.14.0",
     "react-dom": "^16.9.0",
     "react-scripts": "2.1.3"
   },
diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..5b6ae7d 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,31 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc : number,
+  price_def : number,
+  ratio:number,
   timestamp: Date,
+  upper_bound : number,
+  lower_bound : number,
+  trigger_alert: number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverRespond: ServerRespond[]): Row {
+      const priceABC = (serverRespond[0].top_ask.price + serverRespond[0].top_bid.price)/2;
+      const priceDEF = (serverRespond[1].top_ask.price + serverRespond[1].top_bid.price)/2;
+      const ratio = priceABC/priceDEF;
+      const upper_Bound  =  1 + 0.10;
+      const lower_Bound  =  1 + 0.10;
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,  
+      ratio,
+      timestamp : serverRespond[0].timestamp> serverRespond[1].timestamp? serverRespond[0].timestamp : serverRespond[1].timestamp,
+      lower_bound : lower_Bound,
+      upper_bound:upper_Bound,
+      trigger_alert : (ratio > upper_Bound || ratio < lower_Bound)? ratio : undefined,
+    };
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..d23bdcb 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,5 +1,5 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
+import { Table, TableData } from '@finos/perspective';
 import { ServerRespond } from './DataStreamer';
 import { DataManipulator } from './DataManipulator';
 import './Graph.css';
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
+    price_abc : 'float',
+    price_def : 'float',
+    ratio:'float',
+    timestamp: 'date',
+    upper_bound : 'float',
+    lower_bound : 'float',
+    trigger_alert: 'float',
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -36,23 +39,20 @@ class Graph extends Component<IProps, {}> {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
       elem.setAttribute('row-pivots', '["timestamp"]');
+      elem.setAttribute('columns', '["ratio","lower_bound","upper_bound", "trigger_alert"]');
       elem.setAttribute('columns', '["top_ask_price"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+      
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+     ] as unknown as TableData);
     }
   }
 }
-- 
2.44.0.windows.1

